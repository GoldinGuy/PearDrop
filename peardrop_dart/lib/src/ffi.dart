// ignore_for_file: non_constant_identifier_names
import 'dart:ffi';
import 'dart:io' show Platform;

import 'package:ffi/ffi.dart';

final String _libraryPath =
    Platform.isAndroid ? "libpeardrop_capi.so" :
    Platform.isMacOS ? "libpeardrop_capi.dylib" :
    Platform.isIOS ? "libpeardrop_capi.dylib" :
    Platform.isLinux ? "libpeardrop_capi.so" :
    Platform.isWindows ? "libpeardrop_capi.dll" : null;
final DynamicLibrary _peardropNative = DynamicLibrary.open(_libraryPath);

// For all the platforms we use, (u)intptr_t is equivalent to uint64_t since
// we are only using 64-bit platforms (save android i686, but idk about that).
// TODO: Fix
// Please be careful about changing this! The types are confusingly named
// because this is basically autogenerated with a few tweaks.

typedef _native_ackpacket_create_type = Pointer<Void> Function(Pointer<Void>);
typedef _native_ackpacket_create_type_ffi = Pointer<Void> Function(Pointer<Void>);
final native_ackpacket_create = _peardropNative.lookupFunction<_native_ackpacket_create_type_ffi, _native_ackpacket_create_type>("ackpacket_create");
typedef _native_ackpacket_get_type_type = Pointer<Void> Function(Pointer<Void>);
typedef _native_ackpacket_get_type_type_ffi = Pointer<Void> Function(Pointer<Void>);
final native_ackpacket_get_type = _peardropNative.lookupFunction<_native_ackpacket_get_type_type_ffi, _native_ackpacket_get_type_type>("ackpacket_get_type");
typedef _native_ackpacket_ext_tcp_get_type = int Function(Pointer<Void>, Pointer<Uint16>);
typedef _native_ackpacket_ext_tcp_get_type_ffi = Int32 Function(Pointer<Void>, Pointer<Uint16>);
final native_ackpacket_ext_tcp_get = _peardropNative.lookupFunction<_native_ackpacket_ext_tcp_get_type_ffi, _native_ackpacket_ext_tcp_get_type>("ackpacket_ext_tcp_get");
typedef _native_ackpacket_ext_tcp_update_type = int Function(Pointer<Void>, int);
typedef _native_ackpacket_ext_tcp_update_type_ffi = Int32 Function(Pointer<Void>, Uint16);
final native_ackpacket_ext_tcp_update = _peardropNative.lookupFunction<_native_ackpacket_ext_tcp_update_type_ffi, _native_ackpacket_ext_tcp_update_type>("ackpacket_ext_tcp_update");
typedef _native_ackpacket_free_type = void Function(Pointer<Void>);
typedef _native_ackpacket_free_type_ffi = Void Function(Pointer<Void>);
final native_ackpacket_free = _peardropNative.lookupFunction<_native_ackpacket_free_type_ffi, _native_ackpacket_free_type>("ackpacket_free");
typedef _native_ackpacket_read_type = Pointer<Void> Function(Pointer<Uint8>, int);
typedef _native_ackpacket_read_type_ffi = Pointer<Void> Function(Pointer<Uint8>, Uint64);
final native_ackpacket_read = _peardropNative.lookupFunction<_native_ackpacket_read_type_ffi, _native_ackpacket_read_type>("ackpacket_read");
typedef _native_ackpacket_write_type = int Function(Pointer<Void>, Pointer<Pointer<Uint8>>, Pointer<Uint64>);
typedef _native_ackpacket_write_type_ffi = Int32 Function(Pointer<Void>, Pointer<Pointer<Uint8>>, Pointer<Uint64>);
final native_ackpacket_write = _peardropNative.lookupFunction<_native_ackpacket_write_type_ffi, _native_ackpacket_write_type>("ackpacket_write");

typedef _native_acktype_create_accept_type = Pointer<Void> Function(int);
typedef _native_acktype_create_accept_type_ffi = Pointer<Void> Function(Uint8);
final native_acktype_create_accept = _peardropNative.lookupFunction<_native_acktype_create_accept_type_ffi, _native_acktype_create_accept_type>("acktype_create_accept");
typedef _native_acktype_create_normal_type = Pointer<Void> Function(int);
typedef _native_acktype_create_normal_type_ffi = Pointer<Void> Function(Uint8);
final native_acktype_create_normal = _peardropNative.lookupFunction<_native_acktype_create_normal_type_ffi, _native_acktype_create_normal_type>("acktype_create_normal");
typedef _native_acktype_create_reject_type = Pointer<Void> Function(int);
typedef _native_acktype_create_reject_type_ffi = Pointer<Void> Function(Uint8);
final native_acktype_create_reject = _peardropNative.lookupFunction<_native_acktype_create_reject_type_ffi, _native_acktype_create_reject_type>("acktype_create_reject");
typedef _native_acktype_free_type = void Function(Pointer<Void>);
typedef _native_acktype_free_type_ffi = Void Function(Pointer<Void>);
final native_acktype_free = _peardropNative.lookupFunction<_native_acktype_free_type_ffi, _native_acktype_free_type>("acktype_free");
typedef _native_acktype_from_raw_type = Pointer<Void> Function(int);
typedef _native_acktype_from_raw_type_ffi = Pointer<Void> Function(Uint8);
final native_acktype_from_raw = _peardropNative.lookupFunction<_native_acktype_from_raw_type_ffi, _native_acktype_from_raw_type>("acktype_from_raw");
typedef _native_acktype_get_type_type = int Function(Pointer<Void>, Pointer<Uint8>);
typedef _native_acktype_get_type_type_ffi = Int32 Function(Pointer<Void>, Pointer<Uint8>);
final native_acktype_get_type = _peardropNative.lookupFunction<_native_acktype_get_type_type_ffi, _native_acktype_get_type_type>("acktype_get_type");
typedef _native_acktype_is_accepted_type = int Function(Pointer<Void>, Pointer<Uint8>);
typedef _native_acktype_is_accepted_type_ffi = Int32 Function(Pointer<Void>, Pointer<Uint8>);
final native_acktype_is_accepted = _peardropNative.lookupFunction<_native_acktype_is_accepted_type_ffi, _native_acktype_is_accepted_type>("acktype_is_accepted");
typedef _native_acktype_to_raw_type = int Function(Pointer<Void>, Pointer<Uint8>);
typedef _native_acktype_to_raw_type_ffi = Int32 Function(Pointer<Void>, Pointer<Uint8>);
final native_acktype_to_raw = _peardropNative.lookupFunction<_native_acktype_to_raw_type_ffi, _native_acktype_to_raw_type>("acktype_to_raw");

typedef _native_adpacket_create_type = Pointer<Void> Function();
typedef _native_adpacket_create_type_ffi = Pointer<Void> Function();
final native_adpacket_create = _peardropNative.lookupFunction<_native_adpacket_create_type_ffi, _native_adpacket_create_type>("adpacket_create");
typedef _native_adpacket_ext_tcp_get_type = int Function(Pointer<Void>, Pointer<Uint16>);
typedef _native_adpacket_ext_tcp_get_type_ffi = Int32 Function(Pointer<Void>, Pointer<Uint16>);
final native_adpacket_ext_tcp_get = _peardropNative.lookupFunction<_native_adpacket_ext_tcp_get_type_ffi, _native_adpacket_ext_tcp_get_type>("adpacket_ext_tcp_get");
typedef _native_adpacket_ext_tcp_update_type = int Function(Pointer<Void>, int);
typedef _native_adpacket_ext_tcp_update_type_ffi = Int32 Function(Pointer<Void>, Uint16);
final native_adpacket_ext_tcp_update = _peardropNative.lookupFunction<_native_adpacket_ext_tcp_update_type_ffi, _native_adpacket_ext_tcp_update_type>("adpacket_ext_tcp_update");
typedef _native_adpacket_free_type = void Function(Pointer<Void>);
typedef _native_adpacket_free_type_ffi = Void Function(Pointer<Void>);
final native_adpacket_free = _peardropNative.lookupFunction<_native_adpacket_free_type_ffi, _native_adpacket_free_type>("adpacket_free");
typedef _native_adpacket_read_type = Pointer<Void> Function(Pointer<Uint8>, int);
typedef _native_adpacket_read_type_ffi = Pointer<Void> Function(Pointer<Uint8>, Uint64);
final native_adpacket_read = _peardropNative.lookupFunction<_native_adpacket_read_type_ffi, _native_adpacket_read_type>("adpacket_read");
typedef _native_adpacket_write_type = int Function(Pointer<Void>, Pointer<Pointer<Uint8>>, Pointer<Uint64>);
typedef _native_adpacket_write_type_ffi = Int32 Function(Pointer<Void>, Pointer<Pointer<Uint8>>, Pointer<Uint64>);
final native_adpacket_write = _peardropNative.lookupFunction<_native_adpacket_write_type_ffi, _native_adpacket_write_type>("adpacket_write");

typedef _native_senderpacket_create_type = Pointer<Void> Function(Pointer<Utf8>, Pointer<Utf8>, int);
typedef _native_senderpacket_create_type_ffi = Pointer<Void> Function(Pointer<Utf8>, Pointer<Utf8>, Uint64);
final native_senderpacket_create = _peardropNative.lookupFunction<_native_senderpacket_create_type_ffi, _native_senderpacket_create_type>("senderpacket_create");
typedef _native_senderpacket_free_type = void Function(Pointer<Void>);
typedef _native_senderpacket_free_type_ffi = Void Function(Pointer<Void>);
final native_senderpacket_free = _peardropNative.lookupFunction<_native_senderpacket_free_type_ffi, _native_senderpacket_free_type>("senderpacket_free");
typedef _native_senderpacket_get_data_length_type = int Function(Pointer<Void>, Pointer<Uint64>);
typedef _native_senderpacket_get_data_length_type_ffi = Int32 Function(Pointer<Void>, Pointer<Uint64>);
final native_senderpacket_get_data_length = _peardropNative.lookupFunction<_native_senderpacket_get_data_length_type_ffi, _native_senderpacket_get_data_length_type>("senderpacket_get_data_length");
typedef _native_senderpacket_get_filename_type = Pointer<Utf8> Function(Pointer<Void>);
typedef _native_senderpacket_get_filename_type_ffi = Pointer<Utf8> Function(Pointer<Void>);
final native_senderpacket_get_filename = _peardropNative.lookupFunction<_native_senderpacket_get_filename_type_ffi, _native_senderpacket_get_filename_type>("senderpacket_get_filename");
typedef _native_senderpacket_get_mimetype_type = Pointer<Utf8> Function(Pointer<Void>);
typedef _native_senderpacket_get_mimetype_type_ffi = Pointer<Utf8> Function(Pointer<Void>);
final native_senderpacket_get_mimetype = _peardropNative.lookupFunction<_native_senderpacket_get_mimetype_type_ffi, _native_senderpacket_get_mimetype_type>("senderpacket_get_mimetype");
typedef _native_senderpacket_read_type = Pointer<Void> Function(Pointer<Uint8>, int);
typedef _native_senderpacket_read_type_ffi = Pointer<Void> Function(Pointer<Uint8>, Uint64);
final native_senderpacket_read = _peardropNative.lookupFunction<_native_senderpacket_read_type_ffi, _native_senderpacket_read_type>("senderpacket_read");
typedef _native_senderpacket_write_type = int Function(Pointer<Void>, Pointer<Pointer<Uint8>>, Pointer<Uint64>);
typedef _native_senderpacket_write_type_ffi = Int32 Function(Pointer<Void>, Pointer<Pointer<Uint8>>, Pointer<Uint64>);
final native_senderpacket_write = _peardropNative.lookupFunction<_native_senderpacket_write_type_ffi, _native_senderpacket_write_type>("senderpacket_write");

typedef _native_string_free_type = void Function(Pointer<Utf8>);
typedef _native_string_free_type_ffi = Void Function(Pointer<Utf8>);
final native_string_free = _peardropNative.lookupFunction<_native_string_free_type_ffi, _native_string_free_type>("string_free");
